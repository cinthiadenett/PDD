@page "/Detalles/Detalles"
@using BlazorApp1.Data
@inject DetalleServicio DetalleServicio
@inject NavigationManager navigation
@inject IJSRuntime JsRuntime

<h1>Listado de detalles</h1>

<button class="btn btn-primary" @onclick="()=>Editar(0)">Nuevo</button>

@if (Detalle == null)
{
    <p>Cargando...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Fecha</th>
                <th>Tiempo</th>
                <th>Recurso</th>
                <th>Tarea</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var D in Detalle)
            {
                <tr>
                    <td>@D.Id</td>
                    <td>@D.fecha</td>
                    <td>@D.tiempo</td>
                    <td>@D.recurso.Nombre</td>
                    <td>@D.tarea.Titulo</td>
                    <td><button class="btn btn-success" @onclick="()=>Editar(D.Id)">Editar</button> <button class="btn btn-danger" @onclick="()=>Borrar(D.Id)">Borrar</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {


    private List<Detalle> Detalle;

    protected override async Task OnInitializedAsync()
    {
        Detalle = await DetalleServicio.GetAllDetalle();

    }

    protected void Editar(int id)
    {
        navigation.NavigateTo("/Detalles/EditarDetalle/" + id);
    }

    async Task Borrar(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "¿Seguro de eliminar detalle?");
        if (confirmed)
        {
            await DetalleServicio.Remove(id);
            Detalle = await DetalleServicio.GetAllDetalle();
        }

    }